# Here your code
semi_join(data1, data2, by="Hospital")
# Here your code
semi_join(data2, data1, by="Hospital")
data2a <- data2 %>%
arrange(-Profit)
print(data2a)
# Here your code
merged_Hospitals = cbind(data1, data2a)
# Here your code
merged_Hospitals <- cbind(data1, data2a)
# Here your code
merged_Hospitals <- cbind(data1, data2a)
merged_Hospitals
data1a <- data.frame(
Hospital = c("Giga"),
Revenue = c("1000")
)
print(data1a)
# Here your code
new_Hospital <- rbind(data1, data1a)
# Here your code
new_Hospital <- rbind(data1, data1a)
new_Hospital
# Here your code
read.excel(..\sourcedata\OECD-Health-Statistics-2020-Frequently-Requested-Data.xls)
# Here your code
read.excel(../sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls)
# Here your code
readxl(../sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls)
# Here your code
library(tidyverse)
library(readxl)
# Run this code
data1 <- data.frame(
Hospital = c("Gigant", "Moloch", "Mega"),
Revenue = c(100, 95, 90),
stringsAsFactors = FALSE
)
print(data1)
# Run this code
data2 <- data.frame(
Hospital = c("Gigant", "Moloch", "Maverick"),
Profit = c(10, 11, 5),
stringsAsFactors = FALSE
)
print(data2)
# Here your code
merged_hospital <- merge(data1, data2)
merged_hospital
# Here your code
merged_data <- full_join(data1, data2, by="Hospital")
# Here your code
merged_data1 <- inner_join(data1, data2, by="Hospital")
# Here your code
merged_data2 <- left_join(data2, data1, by="Hospital")
# Here your code
right_join(data2, data1, by="Hospital")
# Here your code
anti_join(data1, data2, by="Hospital")
# Here your code
semi_join(data2, data1, by="Hospital")
data2a <- data2 %>%
arrange(-Profit)
print(data2a)
# Here your code
merged_Hospitals <- cbind(data1, data2a)
merged_Hospitals
data1a <- data.frame(
Hospital = c("Giga"),
Revenue = c("1000")
)
print(data1a)
# Here your code
new_Hospital <- rbind(data1, data1a)
new_Hospital
# Here your code
readxl(../sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls)
# Here your code
library(tidyverse)
library(readxl)
library(readxl)
?read_xls
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3)
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
mutate("Country"="...1"& "2019"="2019...51")
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
mutate("Country"=="...1"& "2019"=="2019...51")
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
mutate('Country'=='...1'& '2019'=='2019...51')
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
mutate('Country'='...1'& '2019'='2019...51')
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
mutate('Country'='...1','2019'='2019...51')
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
rename('Country'='...1','2019'='2019...51')
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
rename('Country'='...1','2019'='2019...51') %>%
select('2011':'2019')
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
rename('Country'='...1','2019'='2019...51') %>%
select('Country', '2011':'2019')
?slice
# Here your code
read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
rename('Country'='...1','2019'='2019...51') %>%
select('Country', '2011':'2019') %>%
slice(1:5)
# Here your code
Countries <- read_xls("/Users/JoostHaddinga_1/Desktop/University/SemesterII/Programming/R_Lectures/Rprogramming21_student/Lecture_3/sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls", sheet="Curr exp, per capita US$PPP", skip=3) %>%
rename('Country'='...1','2019'='2019...51') %>%
select('Country', '2011':'2019') %>%
slice(1:5)
![](pivotplot.png)
?pivot_longer
# Here your code
df2 <- pivot_longer(Countries, cols=Country, names_to="Year", values_to="Expenditure")
# Here your code
df2 <- pivot_longer(Countries, cols=Country, names_to="Year", values_to="Expenditure")
df2
# Here your code
df2 <- pivot_longer(Countries, !Country, names_to="Year", values_to="Expenditure")
df2
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous(breaks=)
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous(breaks=1)
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous(breaks=2)
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous()
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous(breaks=Year)
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous(breaks="Year")
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous()
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous(breaks=)
?scale_x_continuous
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous(breaks=waiver())
# Here your code
ggplot(df2, aes(x=as.integer(Year), y=Expenditure, colour=Country))+geom_line()+theme_minimal()+labs(x="", y="Expenditure per capita in PPP")+scale_x_continuous(breaks=c(2011:2019))
# Here your code
df2 <- data.frame(pivot_longer(Countries, !Country, names_to="Year", values_to="Expenditure"))
df2
# Here your code
df3 = data.frame(df2(select('2018', '2019')))
# Here your code
df3 = data.frame(df2, select('2018', '2019'))
# Here your code
df3 = data.frame(df2, slice('2018', '2019'))
# Here your code
df3 = data.frame(df2, slice(2018, 2019))
# Here your code
df3 <- data.frame(df2, filter(Year == 2018, Year==2019))
# Here your code
df3 <- data.frame(df2, filter("Year" == 2018, "Year"==2019))
# Here your code
df3 <- data.frame(df2) %>%
filter(Year==2018, Year ==2019)
df3
# Here your code
df3 <- data.frame(df2) %>%
select(Year==2018, Year ==2019)
# Here your code
df3 <- data.frame(df2) %>%
select("Year"==2018, "Year" ==2019)
# Here your code
df3 <- data.frame(df2) %>%
select(2018, 2019)
?select
# Here your code
df3 <- data.frame(df2) %>%
select(df2, 2018:2019)
# Here your code
df3 <- df2 %>%
select(df2, 2018:2019)
# Here your code
df3 <- df2 %>%
select(contains("2018") & contains("2019"))
df3
# Here your code
df3 <- df2 %>%
select(contains("2018") & contains("2019"), Country:Expenditure)
df3
# Here your code
df3 <- df2 %>%
select(contains("2018") & contains("2019"), Country & Expenditure)
# Here your code
df3 <- df2 %>%
select(contains("2018") & contains("2019"), Country, Expenditure)
df3
# Here your code
df3 <- df2 %>%
select(Ycontains("2018") & contains("2019"), Country, Expenditure)
# Here your code
df3 <- df2 %>%
select(Year,contains("2018") & contains("2019"), Country, Expenditure)
df3
# Here your code
df3 <- df2 %>%
filter(Year==2018)
df3
# Here your code
df3 <- df2 %>%
filter(Year==2018, Year==2019)
df3
# Here your code
df3 <- df2 %>%
filter(Year==2018 & Year==2019)
df3
# Here your code
df3 <- df2 %>%
filter(Year==2018 or Year==2019)
# Here your code
df3 <- df2 %>%
filter(Year==2018:2019)
df3
# Here your code
df3 <- df2 %>%
filter(Year==2018)
df3
# Here your code
df3 <- df2 %>%
filter(Year==2018 + Year==2019)
# Here your code
df3 <- df2 %>%
select(Year==2018)
?subset
# Here your code
df3 <- df2 %>%
subset(Year > 2017, select= c(Country:Expenditure))
df3
# Here your code
df4 <- pivot_wider(df3, names_from = 'Country' , values_from = 'Year')
df4
# Here your code
df4 <- pivot_wider(df3, names_from = 'Year' , values_from = 'Expedniture')
# Here your code
df4 <- pivot_wider(df3, names_from = 'Year' , values_from = 'Expenditure')
df4
# Here your code
mutate(df4, (Growth=('2019'-'2018')/'2018')))
# Here your code
mutate(df4, (Growth=('2019'-'2018')/'2018'))
# Here your code
mutate(df4, (Growth==('2019'-'2018')/'2018'))
# Here your code
mutate(df4, (('2019'-'2018')/'2018')=Growth)
# Here your code
Growth <-df4 %>%
mutate(Growth=(('2019'-'2018')/'2018'))
# Here your code
mutate(data =df4, Growth = ('2019' - '2018')/'2018')
# Here your code
mutate(.data =df4, Growth = ('2019' - '2018')/'2018')
?mutate
# Here your code
mutate(.data =df4, Growth = ('2019' - '2018'))
# Here your code
mutate(.data =df4, Growth = mean(2018)
# Here your code
mutate(.data =df4, Growth = mean(2018))
# Here your code
mutate(.data =df4, Growth = mean(c(2018))
# Here your code
mutate(.data =df4, (!'2019'-!'2018')/!'2018)
# Here your code
mutate(.data =df4, (!'2019'-!'2018')/!'2018))
# Here your code
mutate(.data =df4, (!'2019'-!'2018')/!'2018)
# Here your code
mutate(.data =df4, (!'2019'-!'2018')/!'2018')
# Here your code
mutate(.data =df4, (!2019-!2018)/!2018)
# Here your code
df4 %>%
select('2018':'2019')
mutate(Growth =(!'2019'-!'2018')/!'2018')
# Here your code
df4 %>%
select('2018':'2019') %>%
mutate(Growth =('2019'-'2018')/'2018')
# Here your code
df4 %>%
select('2018','2019') %>%
mutate(Growth =('2019'-'2018')/'2018')
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Growth =('2019'-'2018')/'2018')
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Growth = ('2019'-'2018')/'2018')
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(x = ('2019'-'2018')/'2018')
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Growth = '2019'-'2018')
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Growth = mean(2018, 2019))
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Growth = mean('2018', '2019'))
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Growth = sum('2018', '2019'))
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Growth = avg('2018', '2019'))
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Growth = weighted.mean('2018', '2019'))
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(2018x = '2018' * 2))
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate("2018x" = '2018' * 2))
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate("2018x" = '2018' * 2)
# Here your code
df4 %>%
select(Country,'2018','2019') %>%
mutate(Year2 = '2018' * 2)
# Here your code
df4 %>%
select(Country,"2018","2019") %>%
group_by(Country)
mutate(Growth = ('2019'-'2018')/'2018' )
# Here your code
df4 %>%
select(Country,"2018","2019") %>%
group_by(Country) %>%
mutate(Growth = ('2019'-'2018')/'2018' )
# Here your code
df4$Growth <- with(df4, ('2019'-'2018')/'2018')
# Here your code
df4$Growth <- with(df4, ('2019' - '2018')/'2018')
# Here your code
rename(.data = df4, "2018" = Year1, "2019"=Year2)
# Here your code
rename(.data = df4, Year1 = "2018", Year2="2019")
# Here your code
rename(.data = df4, Year1 = "2018", Year2="2019")
df4 %>%
select(Country,Year1, Year2) %>%
group_by(Country) %>%
mutate(Growth = (Year2-Year1)/Year1 )
# Here your code
rename(.data = df4, Year1 = "2018", Year2="2019")
df4 %>%
select(Country,Year1, Year2) %>%
group_by(Country) %>%
mutate(Growth = (Year2-Year1)/Year1)
# Here your code
rename(.data = df4, Year1 = "2018", Year2="2019")
df4
# Here your code
df4a <- rename(.data = df4, Year1 = "2018", Year2="2019")
# Here your code
df4a <- rename(.data = df4, Year1 = "2018", Year2="2019")
df4a
# Here your code
df4a <- rename(.data = df4, Year1 = "2018", Year2="2019")
df4a
df4a %>%
select(Country,Year1, Year2) %>%
group_by(Country) %>%
mutate(Growth = (Year2-Year1)/Year1)
# Here your code
ggplot(df4a, aes(x=Country, y=Growth, colour=Country))+theme_bw()+geom_bar()
# Here your code
df4a <- rename(.data = df4, Year1 = "2018", Year2="2019")
df4a
df4b <-df4a %>%
select(Country,Year1, Year2) %>%
group_by(Country) %>%
mutate(Growth = (Year2-Year1)/Year1)
# Here your code
df4a <- rename(.data = df4, Year1 = "2018", Year2="2019")
df4a
df4b <-df4a %>%
select(Country,Year1, Year2) %>%
group_by(Country) %>%
mutate(Growth = (Year2-Year1)/Year1)
df4b
# Here your code
ggplot(df4b, aes(x=Country, y=Growth, colour=Country))+theme_bw()+geom_bar()
# Here your code
ggplot(df4b, aes(x=Country, y=Growth, colour=Country))+theme_bw()+geom_col()
# Here your code
ggplot(df4b, aes(x=Country, y=Growth, fill=Country))+theme_bw()+geom_col()
# Here your code
ggplot(df4b, aes(x=Country, y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
arrange(-Growth)
ggplot(df4c, aes(x=Country, y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
ggplot(df4c, aes(x=Country, y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=Country, y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
order(Growth)
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=Country, y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")+geom_text()
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")+geom_text(label=)
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")+geom_text(label)
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")+
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")+theme(legend. position = none)
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+theme_bw()+geom_col()+labs(x="")+theme(legend.position = none)
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+geom_col()+labs(x="")+theme(legend.position = none)
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country))+geom_col()+labs(x="")+geom_text()
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country), show.legend = FALSE)+geom_col()+labs(x="")
# Here your code
df4c <- df4b %>%
arrange(desc(Growth))
df4c
ggplot(df4c, aes(x=reorder(Country, -Growth), y=Growth, fill=Country), show.legend = FALSE)+geom_col()+labs(x="")+theme(legend.position = "none")
